/* 3 variations 
   1 . To print the Pascal triangle  TC:O(n2) SC:O(n2)
   2 . To print a row                TC:O(n)  SC:O(n)
   3 . To print a particular value   TC:O(N)  SC:O(1)
*/


class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> row,pre = null;
        for(int i=0; i<numRows ;i++){         //WHY PREINCREMENT???????????
            row = new ArrayList<Integer>();   //EACH TIME A NEW LISTARRAY(FOR EACH i)
            for(int j = 0;j<=i;j++){
                                              //IN EACH ROW MY STARTING AND LAST VALUE IS 1
                if(j==0||j==i)
                    row.add(1);
                                              //ORELSE , MY RESULTANT AT PRESENT jTH POS WILL BE PREVIOUS ROWS(j-1 & jTH) ELEMENT
                else
                    row.add(pre.get(j-1) + pre.get(j));
            }
                                              //AFTER EACH ROW, BEFORE GOING TO NEW ROW MY PRESENT, WILL NOW BECOME PREVIOUS
            pre  = row;
            res.add(row);
        }
        return res;
        
    }
}

