class Solution {
    private boolean searchNxt(char[][] board,int row,int col,String word,int index,int n,int m){
        if(index == word.length())return true;

        if(row<0 || col<0 || row == n|| col == m|| board[row][col]!= word.charAt(index)|| board[row][col] == '.')return false;
        char c = board[row][col];
        board[row][col] = '.';

        boolean up = searchNxt(board,row-1,col,word,index+1,n,m);
        boolean down = searchNxt(board,row+1,col,word,index+1,n,m);
        boolean right = searchNxt(board,row,col+1,word,index+1,n,m);
        boolean left = searchNxt(board,row,col-1,word,index+1,n,m);
        //backtrack
        board[row][col] = c;
        return up || down || left || right;

    }
    public boolean exist(char[][] board, String word) {
        int n = board.length;
        int m = board[0].length;
        int index = 0;
        for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
                if(board[i][j] == word.charAt(index)){
                    if(searchNxt(board,i,j,word,index,n,m)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
}
